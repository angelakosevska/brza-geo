import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import {
  Form,
  FormField,
  FormItem,
  FormLabel,
  FormControl,
  FormMessage,
} from "@/components/ui/form";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import * as z from "zod";

// Zod schema –∑–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—ò–∞ –Ω–∞ login

const loginSchema = z.object({
  login: z.string().min(1, "–ü–æ–ª–µ—Ç–æ –µ –∑–∞–¥–æ–ª–∂–∏—Ç–µ–ª–Ω–æ"),
  password: z.string().min(6, "–õ–æ–∑–∏–Ω–∫–∞—Ç–∞ –º–æ—Ä–∞ –¥–∞ –∏–º–∞ –Ω–∞—ò–º–∞–ª–∫—É 6 –∫–∞—Ä–∞–∫—Ç–µ—Ä–∏"),
});

export function LoginForm({ handleLogin, onFlip, onForgotPassword }) {
  const form = useForm({
    resolver: zodResolver(loginSchema),
    defaultValues: {
      login: "",
      password: "",
    },
  });

  const onSubmit = (data) => {
    handleLogin({ preventDefault: () => {} }, data);
  };

  return (
    <Form {...form}>
      <form
        onSubmit={form.handleSubmit(onSubmit)}
        className="flex flex-col gap-4 p-4 sm:p-8 w-full"
      >
        <p className="mb-2 font-extrabold text-[var(--primary)] text-xl sm:text-2xl md:text-3xl text-center">
          –õ–æ–≥–∏—Ä–∞—ò —Å–µ!
        </p>

        {/* Login Identifier (username –∏–ª–∏ email) */}
        <FormField
          control={form.control}
          name="login"
          render={({ field }) => (
            <FormItem>
              <FormLabel>–ö–æ—Ä–∏—Å–Ω–∏—á–∫–æ –∏–º–µ –∏–ª–∏ –µ-–ø–æ—à—Ç–∞</FormLabel>
              <FormControl>
                <Input
                  type="text"
                  placeholder="–í–Ω–µ—Å–∏ –∫–æ—Ä–∏—Å–Ω–∏—á–∫–æ –∏–º–µ –∏–ª–∏ –µ-–ø–æ—à—Ç–∞"
                  autoComplete="username"
                  {...field}
                />
              </FormControl>
              <FormMessage />
            </FormItem>
          )}
        />

        {/* Password */}
        <FormField
          control={form.control}
          name="password"
          render={({ field }) => (
            <FormItem>
              <FormLabel>–õ–æ–∑–∏–Ω–∫–∞</FormLabel>
              <FormControl>
                <Input
                  type="password"
                  placeholder="–õ–æ–∑–∏–Ω–∫–∞"
                  autoComplete="current-password"
                  {...field}
                />
              </FormControl>
              <FormMessage />
            </FormItem>
          )}
        />

        {/* Forgot password */}
        <div className="text-right">
          <Button
            type="button"
            variant="link"
            className="p-0 h-auto text-[var(--primary)] text-xs sm:text-sm"
            onClick={onForgotPassword}
          >
            –ó–∞–±–æ—Ä–∞–≤–µ–Ω–∞ –ª–æ–∑–∏–Ω–∫–∞?
          </Button>
        </div>

        {/* Submit */}
        <Button className="mt-2 w-full" type="submit">
          –õ–æ–≥–∏—Ä–∞—ò —Å–µ
        </Button>

        {/* Flip to register */}
        <Button
          variant="link"
          className="mt-4 text-xs sm:text-sm"
          onClick={onFlip}
          type="button"
        >
          üëâ –ù–µ–º–∞—à –ø—Ä–æ—Ñ–∏–ª? <span className="font-semibold">–†–µ–≥–∏—Å—Ç—Ä–∏—Ä–∞—ò —Å–µ</span>
        </Button>
      </form>
    </Form>
  );
}
